#include "stdafx.h";
#include "CircularList.h";

template<class T> void CircularList<T>::add(T data)
{
	AnimalNode<T> *p;
	if(itemsInList == 0){
		current->data = data;
		itemsInList++;
	}
	else{
		p = new AnimalNode<T>();
		p->data = data;
		p->next = current->next;
		if(current->previous == current){
			current->previous = p;
		}
		current->next = p;
		(p->next)->previous = p;
		p->previous = current;
		itemsInList++;
	}
}

template<class T>
void CircularList<T>::editCurrent()
{
	try{
		(current->data).edit();
	}catch(...){
		cout << "Unable to edit." << endl;
	}
}
template<class T>
void CircularList<T>::displayCurrent()
{
	try{
		cout << current->data;
	}catch(...){
		cout << "Cannot display current.";
		}
}
template<class T>
bool CircularList<T>::isEmpty(){
	if(itemsInList == 0){
		return(true);
	}
	else{
	return(false)
	}
}
